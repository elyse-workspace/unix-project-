Recycle script 3#!/bin/bashfullpath=$(readlink -fn $1)fullpathrecycle=$(readlink -e ~/project/recycle)#Create recycle bin directory if not already exist. If exist then overwriteif [ -d $HOME/recyclebin ] ; then    rm -rf $HOME/recyclebin    mkdir -p $HOME/recyclebin    touch $HOME/.restore.infoelse     mkdir -p $HOME/recyclebin     touch $HOME/.restore.infofirm_AddToRestoreList() {    # If pass errors test. Remove file and keep record in .restore.info     if [ $file != “Error” ] ; then          inode=$(ls -i $file | cut -d " " -f1)          fileName=$(basename $file)          fileName_inode=$fileName\_$inode          mv $file $HOME/recyclebin/$fileName_inode          echo $fileName_inode:$fullpath >> $HOME/.restore.info     fi}#Update -i -v optionsmulti_op() {     if [ $no_option = true ] ; then          rm_AddToRestoreList     elif [[ $i_option = true && $v_option = true ]] ; then          if [ -s $file ] ; then               read -p " $file is empty. Proceed remove ‘$file’? [y/n] " response          else               read -p " Proceed remove '$file'? [y/n] " response          fi          select_response     elif [ $v_option = true ] ; then          rm_AddToRestoreList          echo "removed '$file'"     fi}select_response() {     case $response in          y|Y) rm_addtorestoreList ;;          n|N) continue ;;          *) read -p "Invalid response! [y/n] " response              select_response ;;      esac}########## - Main - ##########no_option=truei_option=falsev_option=falsewhile getopts ivr optdo     case $opt in          i)  i_option=true              no_option=false              ;;          v)  v_option=true              no_option=false              ;;       esacdoneshift $(($OPTIND - 1))for i in $@do     file=$i     # Test if any file does not exist     if [ ! -e $file ] ; then          echo “Error: $file does not exist!”          exit      fi     # Test if file recycle being deleted     if [ $fullpath = $fullpathrecycle ] ; then          echo "Attempting to delete recycle - Operation aborted!"          exit     fi     #Test if any file is a directory     if [ -d $file ] ; then          echo "Error: $file is a directory!"          file="Error"     fi     multi_opdone                                                                                   